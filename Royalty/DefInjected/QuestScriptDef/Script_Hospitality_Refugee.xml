<?xml version="1.0" encoding="UTF-8"?>
<LanguageData>
  
  <!-- EN:
    <li>lastOrNot(lodgerCount==1)-></li>
    <li>lastOrNot(lodgerCount>=2)->last</li>
    <li>lodgersLabelSingularOrPlural(lodgerCount==1)->[lodgersLabel]</li>
    <li>lodgersLabelSingularOrPlural(lodgerCount>=2)->[lodgersLabelPlural]</li>
    <li>lodgersArriveLetterLabel->[lodgersLabelSingularOrPlural] arrived</li>
    <li>lodgersArriveLetterText->[lodgersSingularOrPluralDef] [hasHave] arrived. [lodgersPronoun] will stay with you for [questDurationTicks_duration] so [lodgersPronoun] can rest and regroup.</li>
    <li>hasHave(lodgerCount==1)->has</li>
    <li>hasHave(lodgerCount>=2)->have</li>
    <li>appalledButNoAction->The {PAWNSALIVECOUNT_multiple ? others seem : last [lodgersLabel] is} appalled at this, but {PAWNSALIVECOUNT_multiple ? are: is} not taking action against you.</li>
    <li>othersWillNotAccept->The {PAWNSALIVECOUNT_multiple ? others are : last [lodgersLabel] is} not willing to accept this</li>
    <li>turnedViolent->[othersWillNotAccept], and {PAWNSALIVECOUNT_multiple ? have : has } turned violently against you.</li>
    <li>decidedToLeave->[othersWillNotAccept], and {PAWNSALIVECOUNT_multiple ? have : has } decided to leave.</li>
    <li>whoAskedToStay->who asked to stay with you</li>
    <li>oneOfThe->one of the desperate [faction_pawnsPlural] who asked to stay with you</li>
    <li>questOver->The quest '[resolvedQuestName]' is over.</li>
    <li>letterIntroDeath->{SUBJECT_definite}, [oneOfThe] has died.</li>
    <li>lodgerDiedMemoryThoughtLetterLabel->[lodgersLabel] died: Anger</li>
    <li>lodgerDiedMemoryThoughtLetterText->[letterIntroDeath]\n\n[appalledButNoAction]</li>
    <li>lodgerDiedAttackPlayerLetterLabel->[lodgersLabel] died: Revenge</li>
    <li>lodgerDiedAttackPlayerLetterText->[letterIntroDeath]\n\n[turnedViolent]</li>
    <li>lodgerDiedLeaveMapLetterLabel->[lodgersLabel] died: Departure</li>
    <li>lodgerDiedLeaveMapLetterText->[letterIntroDeath]\n\n[decidedToLeave]</li>
    <li>lodgersAllDiedLetterLabel->Quest failed</li>
    <li>lodgersAllDiedLetterText->{SUBJECT_definite}, the [lastOrNot] desperate [faction_pawnSingular] [whoAskedToStay], has died.\n\n[questOver]</li>
    <li>letterIntroArrested->You arrested {SUBJECT_definite}, [oneOfThe].</li>
    <li>lodgerArrestedMemoryThoughtLetterLabel->[lodgersLabel] arrested: Anger</li>
    <li>lodgerArrestedMemoryThoughtLetterText->[letterIntroArrested]\n\n[appalledButNoAction]</li>
    <li>lodgerArrestedAttackPlayerLetterLabel->[lodgersLabel] arrested: Revenge</li>
    <li>lodgerArrestedAttackPlayerLetterText->[letterIntroArrested]\n\n[turnedViolent]</li>
    <li>lodgerArrestedLeaveMapLetterLabel->[lodgersLabel] arrested: Departure</li>
    <li>lodgerArrestedLeaveMapLetterText->[letterIntroArrested]\n\n[decidedToLeave]</li>
    <li>lodgersAllArrestedLetterLabel->Quest failed</li>
    <li>lodgersAllArrestedLetterText->You arrested {SUBJECT_definite}, the [lastOrNot] desperate [faction_pawnSingular] [whoAskedToStay].\n\n[questOver]</li>
    <li>letterIntroViolated->{SUBJECT_definite}, [oneOfThe], was violated by surgery.</li>
    <li>lodgerViolatedMemoryThoughtLetterLabel->[lodgersLabel] violated: Anger</li>
    <li>lodgerViolatedMemoryThoughtLetterText->[letterIntroViolated]\n\n[appalledButNoAction]</li>
    <li>lodgerViolatedAttackPlayerLetterLabel->[lodgersLabel] violated: Revenge</li>
    <li>lodgerViolatedAttackPlayerLetterText->[letterIntroViolated]\n\n[turnedViolent]</li>
    <li>lodgerViolatedLeaveMapLetterLabel->[lodgersLabel] arrested: Departure</li>
    <li>lodgerViolatedLeaveMapLetterText->[letterIntroViolated]\n\n[decidedToLeave]</li>
    <li>mutinyLetterLabel->Betrayal</li>
    <li>mutinyLetterText->[lodgersSingularOrPluralDef] [whoAskedToStay] [areIs] turning against you!\n\nIt seems [lodgersPronoun] had this treachery planned all along.</li>
    <li>areIs(lodgerCount==1)->is</li>
    <li>areIs(lodgerCount>=2)->are</li>
    <li>betrayalOfferLetterLabel->Betrayal offer: [factionOpponent_nameDef]</li>
    <li>betrayalOffserLetterText->[factionOpponent_nameDef], a [factionOpponent_faction_pawnSingular] of [factionOpponent_faction_name], has learned that [asker_nameDef] [otherLodgers] [areIs] being hosted at [map_definite]. [factionOpponent_pronoun] is enemies with [asker_nameDef] and wants to see [asker_objective] dead.\n\n[factionOpponent_pronoun] will send you the following reward if you kill all members of [faction_name] (total value [betrayalRewardMarketValue_money]):\n\n[betrayalRewards]</li>
    <li>betrayalOfferRewardLetterLabel->Betrayal reward: [factionOpponent_nameDef]</li>
    <li>betrayalOfferRewardLetterText->[factionOpponent_nameDef] promised you a reward if you killed [asker_nameDef] [otherMembers]. [factionOpponent_pronoun] has heard news this has been done and is sending you the following via drop pod (total value [betrayalRewardMarketValue_money]):\n\n[betrayalRewards].\n\n[questOver]</li>
    <li>betrayalOfferFailedLetterLabel->Betrayal reward retracted</li>
    <li>betrayalOfferFailedLetterText->[factionOpponent_nameDef] has learned that one of the members of the [faction_name] is no longer at [map_definite]. [factionOpponent_nameDef] wanted all members of the [faction_name] to die and has therefore retracted [factionOpponent_possessive] offer.</li>
    <li>otherLodgers(lodgerCount==1)-></li>
    <li>otherLodgers(lodgerCount==2)->and another [lodgersLabel]</li>
    <li>otherLodgers(lodgerCount>=3)->and several [lodgersLabelPlural]</li>
    <li>otherMembers(lodgerCount==1)-></li>
    <li>otherMembers(lodgerCount>=2)-> and all other members of the [faction_name]</li>
    <li>lodgersLeavingLetterLabel->[lodgersLabelSingularOrPlural] leaving</li>
    <li>lodgersLeavingLetterText->{FACTION_leaderNameDef} thanks you for allowing {FACTION_leaderObjective} to stay at [map_definite] for these [questDurationTicks_duration]. {FACTION_leaderPronoun} is now moving on with {FACTION_leaderPossessive} people.\n\n{FACTION_leaderNameDef} says {FACTION_leaderPronoun} won't forget what you've done.</li>
  -->
  <Hospitality_Refugee.questContentRules.rulesStrings>
    <li>lastOrNot(lodgerCount==1)-></li>
    <li>lastOrNot(lodgerCount>=2)->derniers</li>
    <li>lodgersLabelSingularOrPlural(lodgerCount==1)->[lodgersLabel]</li>
    <li>lodgersLabelSingularOrPlural(lodgerCount>=2)->[lodgersLabelPlural]</li>
    <li>lodgersArriveLetterLabel->[lodgersLabelSingularOrPlural] [arrived]</li>
    <li>lodgersArriveLetterText->[lodgersSingularOrPluralDef] [hasHave] [arrived]. [lodgersPronoun] [willStay] avec vous pendant [questDurationTicks_duration] afin qu'[lodgersPronoun] [canR] se regrouper et se ressaisir.</li>
    <li>hasHave(lodgerCount==1)->est</li>
    <li>hasHave(lodgerCount>=2)->sont</li>
    <li>arrived(lodgerCount==1)->arrivé</li>
    <li>arrived(lodgerCount>=2)->arrivés</li>
    <li>willStay(lodgerCount==1)->restera</li>
    <li>willStay(lodgerCount>=2)->resteront</li>
    <li>canR(lodgerCount==1)->puisse</li>
    <li>canR(lodgerCount>=2)->puissent</li>
    <li>appalledButNoAction->{PAWNSALIVECOUNT_multiple ? Les autres sont consternés : Le dernier [lodgersLabel] est consterné} par cela, mais {PAWNSALIVECOUNT_multiple ? ils ne prendront: il ne prendra} aucune mesure contre vous.</li>
    <li>othersWillNotAccept->{PAWNSALIVECOUNT_multiple ? Les autres n'acceptent : Le dernier [lodgersLabel] n'accepte} pas cela.</li>
    <li>turnedViolent->[othersWillNotAccept], et {PAWNSALIVECOUNT_multiple ? se sont violemment retournés: s'est violemment retourné} contre vous.</li>
    <li>decidedToLeave->[othersWillNotAccept], et {PAWNSALIVECOUNT_multiple ? ont : a } décidé de partir.</li>
    <li>whoAskedToStay->qui a demandé à rester avec vous</li>
    <li>oneOfThe->un des[faction_pawnsPlural] désespérés qui a demandé à rester avec vous</li>
    <li>questOver->La quête "[resolvedQuestName]" est terminée.</li>
    <li>letterIntroDeath->{SUBJECT_definite}, [oneOfThe] est mort.</li>
    <li>lodgerDiedMemoryThoughtLetterLabel->[lodgersLabel] mort: Colère</li>
    <li>lodgerDiedMemoryThoughtLetterText->[letterIntroDeath]\n\n[appalledButNoAction]</li>
    <li>lodgerDiedAttackPlayerLetterLabel->[lodgersLabel] mort: Vengeance</li>
    <li>lodgerDiedAttackPlayerLetterText->[letterIntroDeath]\n\n[turnedViolent]</li>
    <li>lodgerDiedLeaveMapLetterLabel->[lodgersLabel] mort: Départ</li>
    <li>lodgerDiedLeaveMapLetterText->[letterIntroDeath]\n\n[decidedToLeave]</li>
    <li>lodgersAllDiedLetterLabel->La quête a échoué</li>
    <li>lodgersAllDiedLetterText->{SUBJECT_definite}, Le [lastOrNot] [faction_pawnSingular] désespéré [whoAskedToStay], est mort.\n\n[questOver]</li>
    <li>letterIntroArrested->Vous avez arrêté {SUBJECT_definite}, [oneOfThe].</li>
    <li>lodgerArrestedMemoryThoughtLetterLabel->[lodgersLabel] arrêté: Colère</li>
    <li>lodgerArrestedMemoryThoughtLetterText->[letterIntroArrested]\n\n[appalledButNoAction]</li>
    <li>lodgerArrestedAttackPlayerLetterLabel->[lodgersLabel] arrêté: Vengeance</li>
    <li>lodgerArrestedAttackPlayerLetterText->[letterIntroArrested]\n\n[turnedViolent]</li>
    <li>lodgerArrestedLeaveMapLetterLabel->[lodgersLabel] arrêté: Départ</li>
    <li>lodgerArrestedLeaveMapLetterText->[letterIntroArrested]\n\n[decidedToLeave]</li>
    <li>lodgersAllArrestedLetterLabel-La quête a échoué</li>
    <li>lodgersAllArrestedLetterText->Vous avez arrêté  {SUBJECT_definite}, le [lastOrNot] [faction_pawnSingular] désespéré [whoAskedToStay].\n\n[questOver]</li>
    <li>letterIntroViolated->{SUBJECT_definite}, [oneOfThe], a été chirurgicalement violé.</li>
    <li>lodgerViolatedMemoryThoughtLetterLabel->[lodgersLabel] violé: Colère</li>
    <li>lodgerViolatedMemoryThoughtLetterText->[letterIntroViolated]\n\n[appalledButNoAction]</li>
    <li>lodgerViolatedAttackPlayerLetterLabel->[lodgersLabel] violé: Vengeance</li>
    <li>lodgerViolatedAttackPlayerLetterText->[letterIntroViolated]\n\n[turnedViolent]</li>
    <li>lodgerViolatedLeaveMapLetterLabel->[lodgersLabel] violé: Départ</li>
    <li>lodgerViolatedLeaveMapLetterText->[letterIntroViolated]\n\n[decidedToLeave]</li>
    <li>mutinyLetterLabel->Betrayal</li>
    <li>mutinyLetterText->[lodgersSingularOrPluralDef] [whoAskedToStay] [areIsR] contre vous!\n\nIl semble qu'[lodgersPronoun] [HadSingOrPlural] cette trahison depuis le début.</li>
    <li>areIsR(lodgerCount==1)->s'est retouné</li>
    <li>areIsR(lodgerCount>=2)->se sont retournés</li>
    <li>HadSingOrPlural(lodgerCount==1)->ai planifié</li>
    <li>HadSingOrPlural(lodgerCount>=2)->ont planifé</li>
    <li>hostedSingOrPlural(lodgerCount==1)->hébergé</li>
    <li>hostedSingOrPlural(lodgerCount>=2)->hébergés</li>
    <li>betrayalOfferLetterLabel->Proposition de trahison: [factionOpponent_nameDef]</li>
    <li>betrayalOffserLetterText->[factionOpponent_nameDef], une [factionOpponent_faction_pawnSingular] de [factionOpponent_faction_name], a appris que [asker_nameDef] [otherLodgers] [areIs] [hostedSingOrPlural] à [map_definite]. [factionOpponent_pronoun] sont des ennemis de [asker_nameDef] et veulent le voir mort.\n\n[factionOpponent_pronoun] vous enverra la récompense suivante si vous tuez tous les membres de [faction_name] (total value [betrayalRewardMarketValue_money]):\n\n[betrayalRewards]</li>
    <li>betrayalOfferRewardLetterLabel->Récompense de trahison: [factionOpponent_nameDef]</li>
    <li>betrayalOfferRewardLetterText->[factionOpponent_nameDef] vous avait promis une récompense si vous veniez a tuer [asker_nameDef] [otherMembers]. [factionOpponent_pronoun] a appris de source sûre que cela avait bien été fait et vous envoie ce qui suit via une nacelle de transport (total value [betrayalRewardMarketValue_money]):\n\n[betrayalRewards].\n\n[questOver]</li>
    <li>betrayalOfferFailedLetterLabel->Récompense de trahison annulée</li>
    <li>betrayalOfferFailedLetterText->[factionOpponent_nameDef] a appris que l'un des membres de [faction_name] n'est plus à [map_definite]. [factionOpponent_nameDef] voulait voir tous les membres de [faction_name] morts et a donc annulé son offre.</li>
    <li>otherLodgers(lodgerCount==1)-></li>
    <li>otherLodgers(lodgerCount==2)->et un autre [lodgersLabel]</li>
    <li>otherLodgers(lodgerCount>=3)->et plusieurs [lodgersLabelPlural]</li>
    <li>otherMembers(lodgerCount==1)-></li>
    <li>otherMembers(lodgerCount>=2)-> et tous les autres membres de [faction_name]</li>
    <li>lodgersLeavingLetterLabel->[lodgersLabelSingularOrPlural] sur le départ</li>
    <li>lodgersLeavingLetterText->{FACTION_leaderNameDef} merci d'avoir permis a {FACTION_leaderObjective} de rester à [map_definite] pendant [questDurationTicks_duration]. {FACTION_leaderPronoun} est maintenant retourné(e) vers son peuple.\n\n{FACTION_leaderNameDef} dit qi'{FACTION_leaderPronoun} n'oubliera pas ce que vous avez fait.</li>
  </Hospitality_Refugee.questContentRules.rulesStrings>
  <!-- EN:
    <li>lodgersLabel->refugee</li>
    <li>lodgersLabelPlural->refugees</li>
  -->
  <Hospitality_Refugee.questDescriptionAndNameRules.rulesStrings>
    <li>lodgersLabel->refugié</li>
    <li>lodgersLabelPlural->refugiés</li>
  </Hospitality_Refugee.questDescriptionAndNameRules.rulesStrings>
  <!-- EN:
    <li>offer(lodgerCount==1)->offers</li>
    <li>offer(lodgerCount>=2)->offer</li>
    <li>lodgersPronoun(lodgerCount==1)->[asker_pronoun]</li>
    <li>lodgersPronoun(lodgerCount>=2)->they</li>
    <li>lodgersPreposition(lodgerCount==1)->[asker_objective]self</li>
    <li>lodgersPreposition(lodgerCount>=2)->themselves</li>
    <li>lodgersObjective(lodgerCount==1)->[asker_objective]</li>
    <li>lodgersObjective(lodgerCount>=2)->them</li>
    <li>lodgersPossessive(lodgerCount==1)->[asker_possessive]</li>
    <li>lodgersPossessive(lodgerCount>=2)->their</li>
    <li>lodgersSingularOrPluralDef(lodgerCount==1)->[asker_nameDef]</li>
    <li>lodgersSingularOrPluralDef(lodgerCount>=2)->the [lodgersLabelPlural]</li>
    <li>questDescription->[approachInfo] [claimInfo] [asker_nameDef] begs you for permission to stay at [map_definite] for [questDurationTicks_duration] so [lodgersPronoun] can rest and regroup.\n\nIn return, [lodgersPronoun] [offer] to work and fight for free during that time.\n\n[joinInfo] [lodgersPronoun] may also reward you later for helping [lodgersObjective] - but there is no way to know [lodgersPossessive] true intentions.\n\n[travelerInfo] not part of any faction. If you wish, you can choose to kill, arrest, sell, or harvest [lodgersObjective], without diplomatic consequences.</li>
    <li>approachInfo(lodgerCount==1)->A desperate [faction_pawnSingular] named [asker_nameDef] is approaching.</li>
    <li>approachInfo(lodgerCount==2)->[asker_nameDef] and another desperate [faction_pawnSingular] are approaching.</li>
    <li>approachInfo(lodgerCount>=3)->[lodgerCount] desperate [faction_pawnsPlural] are approaching. Their leader is called [asker_nameDef].</li>
    <li>claimInfo(lodgerCount==1)->[asker_nameDef] claims to have lost [asker_possessive] home in a recent attack.</li>
    <li>claimInfo(lodgerCount>=2)->They claim to have lost their home in a recent attack.</li>
    <li>joinInfo(lodgerCount==1)->If you make [asker_objective] happy, [asker_pronoun] may offer to join you.</li>
    <li>joinInfo(lodgerCount>=2)->If you make them happy, some of them may offer to join you.</li>
    <li>travelerInfo(lodgerCount==1)->This [faction_pawnSingular] is</li>
    <li>travelerInfo(lodgerCount>=2)->These [faction_pawnsPlural] are</li>
  -->
  <Hospitality_Refugee.questDescriptionRules.rulesStrings>
    <li>offer(lodgerCount==1)->offre</li>
    <li>offer(lodgerCount>=2)->offrent</li>
    <li>mayAlso(lodgerCount==1)->pourait</li>
    <li>mayAlso(lodgerCount>=2)->pourraient</li>
    <li>lodgersPronoun(lodgerCount==1)->[asker_pronoun]</li>
    <li>lodgersPronoun(lodgerCount>=2)->ils</li>
    <li>lodgersPreposition(lodgerCount==1)->[asker_objective]-même</li>
    <li>lodgersPreposition(lodgerCount>=2)->eux même</li>
    <li>lodgersObjective(lodgerCount==1)->[asker_objective]</li>
    <li>lodgersObjective(lodgerCount>=2)->leur</li>
    <li>lodgersPossessive(lodgerCount==1)->[asker_possessive]</li>
    <li>lodgersPossessive(lodgerCount>=2)->leur</li>
    <li>lodgersSingularOrPluralDef(lodgerCount==1)->[asker_nameDef]</li>
    <li>lodgersSingularOrPluralDef(lodgerCount>=2)->les [lodgersLabelPlural]</li>
    <li>questDescription->[approachInfo] [claimInfo] [asker_nameDef] vous demande la permission de rester à [map_definite] pour [questDurationTicks_duration] afin de pouvoir se reposer et se ressaisir.\n\nEn retour, [lodgersPronoun] [offer] de travailler et de se battre gratuitement pendant cette période.\n\n[joinInfo] [lodgersPronoun] [mayAlso] également vous récompenser plus tard pour votre aide - mais il n'y a aucun moyen de savoir s'il y a des intentions cachées.\n\[travelerInfo] ne fait partie d'aucune faction. Si vous le souhaitez, vous pouvez choisir de [asker_objective] tuer, de l'arrêter, de [asker_objective] vendre ou de prélever ses organes, et ceci sans aucune conséquence diplomatique.</li>
    <li>approachInfo(lodgerCount==1)->Un [faction_pawnSingular] désespéré nomé [asker_nameDef] approche.</li>
    <li>approachInfo(lodgerCount==2)->[asker_nameDef] et d'autres [faction_pawnSingular] désespérés approchent.</li>
    <li>approachInfo(lodgerCount>=3)->[lodgerCount] [faction_pawnsPlural] désespérés approchent. leur chef se nomme [asker_nameDef].</li>
    <li>claimInfo(lodgerCount==1)->[asker_nameDef] affirme avoir perdu son domicile lors d'une récente attaque.</li>
    <li>claimInfo(lodgerCount>=2)->Ils affirment avoir perdu leur maison lors d'une récente attaque.</li>
    <li>joinInfo(lodgerCount==1)->Si vous [asker_objective] rendez heureux, [asker_pronoun] peut proposer de vous rejoindre.</li>
    <li>joinInfo(lodgerCount>=2)->Si vous les rendez heureux, certains d'entre eux peuvent vous proposer de vous rejoindre.</li>
    <li>travelerInfo(lodgerCount==1)->Ce [faction_pawnSingular] est</li>
    <li>travelerInfo(lodgerCount>=2)->Ces [faction_pawnsPlural] sont</li>
  </Hospitality_Refugee.questDescriptionRules.rulesStrings>
  <!-- EN:
    <li>questName(lodgerCount==1)->[asker_nameDef] the [lodgerAdj]</li>
    <li>questName(lodgerCount==1)->[athe] [lodgerAdj] [lodgerSingle]</li>
    <li>questName(p=2,lodgerCount>=2)->[lodgerAdj] [lodgerPlural]</li>
    <li>questName(lodgerCount>=2)->[asker_nameDef]'s [lodgerAdj] [lodgerPlural]</li>
    <li>questName(lodgerCount>=2)->[asker_nameDef]'s [lodgerPlural]</li>
    <li>athe->a</li>
    <li>athe->the</li>
    <li>lodgerAdj->tired</li>
    <li>lodgerAdj->lost</li>
    <li>lodgerAdj->destitute</li>
    <li>lodgerAdj->poor</li>
    <li>lodgerAdj->desperate</li>
    <li>lodgerAdj->sad</li>
    <li>lodgerAdj->dusty</li>
    <li>lodgerAdj->hopeless</li>
    <li>lodgerAdj->unknown</li>
    <li>lodgerAdj->forlorn</li>
    <li>lodgerAdj->forsaken</li>
    <li>lodgerSingle->traveler</li>
    <li>lodgerSingle->refugee</li>
    <li>lodgerSingle->drifter</li>
    <li>lodgerSingle->survivor</li>
    <li>lodgerSingle->nomad</li>
    <li>lodgerSingle->vagabond</li>
    <li>lodgerPlural->travelers</li>
    <li>lodgerPlural->refugees</li>
    <li>lodgerPlural->drifters</li>
    <li>lodgerPlural->survivors</li>
    <li>lodgerPlural->nomads</li>
    <li>lodgerPlural->vagabonds</li>
  -->
  <Hospitality_Refugee.questNameRules.rulesStrings>
    <li>questName(lodgerCount==1)->[asker_nameDef] le [lodgerAdj]</li>
    <li>questName(lodgerCount==1)->[athe] [lodgerSingle] [lodgerAdj]</li>
    <li>questName(p=2,lodgerCount>=2)->[lodgerAdj] [lodgerPlural] [lodgerAdj]</li>
    <li>questName(lodgerCount>=2)->les [lodgerPlural] [lodgerAdj] de [asker_nameDef]</li>
    <li>questName(lodgerCount>=2)->les [lodgerPlural] de [asker_nameDef]</li>
    <li>athe->un</li>
    <li>athe->le</li>
    <li>lodgerAdj->fatigué</li>
    <li>lodgerAdj->perdu</li>
    <li>lodgerAdj->indigent</li>
    <li>lodgerAdj->pauvre</li>
    <li>lodgerAdj->désespéré</li>
    <li>lodgerAdj->triste</li>
    <li>lodgerAdj->poussiéreux</li>
    <li>lodgerAdj->désespéré</li>
    <li>lodgerAdj->inconnu</li>
    <li>lodgerAdj->délaissé</li>
    <li>lodgerAdj->négligé</li>
    <li>lodgerSingle->voyageur</li>
    <li>lodgerSingle->réfugié</li>
    <li>lodgerSingle->hérant</li>
    <li>lodgerSingle->survivant</li>
    <li>lodgerSingle->nomade</li>
    <li>lodgerSingle->vagabond</li>
    <li>lodgerPlural->voyageurs</li>
    <li>lodgerPlural->réfugiés</li>
    <li>lodgerPlural->hérants</li>
    <li>lodgerPlural->survivants</li>
    <li>lodgerPlural->nomades</li>
    <li>lodgerPlural->vagabonds</li>
  </Hospitality_Refugee.questNameRules.rulesStrings>
  
  <!-- EN:
    <li>rewardLetterLabel->Hospitality reward</li>
    <li>rewardLetterText->[rewardGiver_nameDef] has contacted you. [rewardDelayTicks_duration] ago, you helped [rewardGiver_objective] in desperate circumstances.\n\nSince then, [rewardGiver_pronoun] has gotten back on [rewardGiver_possessive] feet, and now [rewardGiver_pronoun] wants to reward you properly for your help. [rewardGiver_pronoun] is sending you the following via drop pod:\n\n[listOfRewards]</li>
  -->
  <RefugeeDelayedReward.questContentRules.rulesStrings>
    <li>rewardLetterLabel->Récompense d'accueil</li>
    <li>rewardLetterText->[rewardGiver_nameDef] vous a contacté. il y a [rewardDelayTicks_duration], vous l'avez aidé dans des circonstances désespérées.\n\nDepuis, [rewardGiver_pronoun] a repris pieds, et maintenant [rewardGiver_pronoun] veut vous récompenser correctement pour votre aide. [rewardGiver_pronoun] vous envoie ce qui suit via une capule de largage:\n\n[listOfRewards]</li>
  </RefugeeDelayedReward.questContentRules.rulesStrings>
  <!-- EN:
    <li>questDescription->a delayed reward for refugee quest</li>
  -->
  <RefugeeDelayedReward.questDescriptionRules.rulesStrings>
    <li>une récompense différée pour la quête du réfugié</li>
  </RefugeeDelayedReward.questDescriptionRules.rulesStrings>
  <!-- EN:
    <li>questName->Refugee delayed reward</li>
  -->
  <RefugeeDelayedReward.questNameRules.rulesStrings><li>questName->Récompense différée du réfugié</li></RefugeeDelayedReward.questNameRules.rulesStrings>
  
</LanguageData>
