<?xml version="1.0" encoding="UTF-8"?>
<LanguageData>
  
  <!-- EN:
    <li>scraped_present->glancing</li>
    <li>scraped_present->bouncing</li>
    <li>scraped_present->grazing</li>
    <li>scraped_present->caroming</li>
    <li>scraped_present->skipping</li>
    <li>scraped_present->skating</li>
    <li>scraped_past->glanced</li>
    <li>scraped_past->bounced</li>
    <li>scraped_past->grazed</li>
    <li>scraped_past->caromed</li>
    <li>scraped_past->skipped</li>
    <li>scraped_past->skated</li>
  -->
  <Combat_DeflectIncludes.rulePack.rulesStrings>
    <!-- [scraped_present (sur)] son armure -->
    <li>scraped_present->obliquant sur</li>
    <li>scraped_present->rebondissant sur</li>
    <li>scraped_present->raclant</li>
    <li>scraped_present->râpant</li>
    <li>scraped_present->ripant sur</li>
    <li>scraped_present->sautant sur</li>
    <li>scraped_present->patinant sur</li>
    <!-- [scraped_past] : pas de (sur) son armure -->
    <li>scraped_past->a obliqué</li>
    <li>scraped_past->a rebondi</li>
    <li>scraped_past->a ripé</li>
    <li>scraped_past->a dérapé</li>
    <li>scraped_past->a sauté</li>
    <li>scraped_past->a patiné</li>
  </Combat_DeflectIncludes.rulePack.rulesStrings>
  
  <!-- EN:
    <li>action->[INITIATOR_definite] [tried] to [damaged_inf] [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] [tried] to [damaged_inf] [RECIPIENT_definite] with [implement]</li>
    <li>action->[INITIATOR_definite] [tried] to use [implement] to [damaged_inf] [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] swung [INITIATOR_possessive] [WEAPON_label] at [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite] with [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] with [implement]</li>
    <li>towardsat->towards</li>
    <li>towardsat->at</li>
    <li>verb_genericattack->swung</li>
    <li>verb_genericattack->flailed</li>
    <li>verb_genericattack->thrashed</li>
    <li>tried->tried</li>
    <li>tried->attempted</li>
  -->
  <Combat_FailIncludes.rulePack.rulesStrings>
    <li>action->[INITIATOR_definite] [tried] de [damaged_inf] [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] [tried] de [damaged_inf] [RECIPIENT_definite] avec [implement]</li>
    <li>action->[INITIATOR_definite] [tried] d'utiliser [implement] pour [damaged_inf] [RECIPIENT_definite]</li>
    <li>action->[INITIATOR_definite] a balancé son/sa [WEAPON_label] sur [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite] avec [implement]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] [towardsat] [RECIPIENT_definite]</li>
    <li>action(p=0.3)->[INITIATOR_definite] [verb_genericattack] avec [implement]</li>
    <li>towardsat->vers</li>
    <li>towardsat->sur</li>
    <li>verb_genericattack->s'est rué</li>
    <li>verb_genericattack->a couru</li>
    <li>verb_genericattack->a bondi</li>
    <li>tried->a essayé</li>
    <li>tried->a tenté</li>
  </Combat_FailIncludes.rulePack.rulesStrings>
  
  <!-- EN:
    <li>result(p=1)->[damaged_present] [RECIPIENT_possessive] [targetlist]</li>
    <li>result(p=0.2)->[damaged_present] [RECIPIENT_possessive] [targetlist] and [flavortext_consequence]</li>
    <li>result(p=0.1)->[damaged_present] [RECIPIENT_possessive] [targetlist] [strikeAdv]</li>
    <li>strikeAdv->painfully</li>
    <li>strikeAdv->horribly</li>
    <li>strikeAdv->savagely</li>
    <li>strikeAdv->viciously</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->leaving a disgusting wound</li>
    <li>flavortext_consequence->leaving a horrific wound</li>
    <li>flavortext_consequence(recipient_flesh!=Mechanoid)->making [RECIPIENT_objective] [wince] [painevent]</li>
    <li>flavortext_consequence(p=0.2)->throwing [RECIPIENT_objective] off balance</li>
  -->
  <Combat_MeleeDamageIncludes.rulePack.rulesStrings>
    <li>result(p=0.5)->[damaged_present] [targetlist]</li>
    <li>result(p=0.1)->[damaged_present] [targetlist] [adverb_flavortext]</li>
    <li>result(p=0.1)->[damaged_present] [targetlist] [flavortext_situation]</li>
    <li>result(p=0.1)->[damaged_present] [targetlist] et [flavortext_consequence]</li>
    <li>adverb_flavortext->douloureusement</li>
    <li>adverb_flavortext->brutalement</li>
    <li>adverb_flavortext->horriblement</li>
    <li>adverb_flavortext->atrocement</li>
    <li>adverb_flavortext->férocement</li>
    <li>adverb_flavortext->impitoyablement</li>
    <li>adverb_flavortext->sauvagement</li>
    <li>adverb_flavortext->vicieusement</li>
    <li>adverb_flavortext->implacablement</li>
    <li>adverb_flavortext->cruellement</li>
    <li>flavortext_situation(RECIPIENT_flesh!=Mechanoid)->dans une explosion de sang</li>
    <li>flavortext_situation(RECIPIENT_flesh==Mechanoid)->dans une explosion de débris</li>
    <li>flavortext_situation->sans aucune émotion</li>
    <li>flavortext_situation(p=0.4)->avec un regard vide</li>
    <li>flavortext_situation(p=0.2,INITIATOR_flesh==Normal)->avec un air farouche</li>
    <li>flavortext_situation(p=0.2,INITIATOR_flesh==Normal)->avec un air [AdjectiveBadass]</li>
    <li>flavortext_situation(p=0.2,INITIATOR_flesh==Normal)->en grimaçant</li>
    <li>flavortext_situation(p=0.2,INITIATOR_flesh==Normal)->en riant</li>
    <li>flavortext_situation(p=0.2,INITIATOR_flesh==Normal)->en souriant</li>
    <li>flavortext_consequence(RECIPIENT_flesh!=Mechanoid)->laissant une blessure dégoûtante</li>
    <li>flavortext_consequence->laissant une blessure horrible</li>
    <li>flavortext_consequence(RECIPIENT_flesh!=Mechanoid)->faisant [wince] [RECIPIENT_definite] [painevent]</li>
    <li>flavortext_consequence(p=0.2)->déstabilisant [RECIPIENT_definite]</li>
  </Combat_MeleeDamageIncludes.rulePack.rulesStrings>
  
  <!-- EN:
    <li>r_logentry->[action], [result].</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=2)->[INITIATOR_possessive] [WEAPON_label]'s [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=1)->[INITIATOR_possessive] [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=1)->a [WEAPON_label]'s [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=0.5)->a [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==bodypart,p=2)->[INITIATOR_possessive] [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=2)->[INITIATOR_possessive] [WEAPON_label]'s [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=1)->[INITIATOR_possessive] [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=1)->[INITIATOR_possessive] [TOOL_label]</li>
    <li>targetlist(recipient_part_count==1)->[recipient_part0_label]</li>
    <li>targetlist(recipient_part_count==2)->[recipient_part0_label] and [recipient_part1_label]</li>
    <li>targetlist(recipient_part_count==3)->[recipient_part0_label], [recipient_part1_label], and [recipient_part2_label]</li>
    <li>targetlist->[recipient_part0_label], [recipient_part1_label], [recipient_part2_label], and [recipient_part3_label]</li>
    <li>damaged_present(deflected!=True)->wounding</li>
    <li>damaged_present(deflected!=True)->injuring</li>
    <li>destroyed(p=0.5)->destroyed</li>
    <li>destroyed(p=0.5)->demolished</li>
    <li>destroyed(p=0.5)->ruined</li>
    <li>destroyed(p=0.5)->wrecked</li>
    <li>wince(recipient_flesh==Normal)->wince</li>
    <li>wince(recipient_flesh==Normal)->grimace</li>
    <li>wince(recipient_flesh==Normal)->cringe</li>
    <li>wince(recipient_flesh==Normal)->groan</li>
    <li>wince(recipient_flesh!=Mechanoid)->scream</li>
    <li>wince(recipient_flesh!=Mechanoid)->shout</li>
    <li>wince->recoil</li>
    <li>wince->stumble</li>
    <li>painstate->in</li>
    <li>painstate->with</li>
    <li>painstate->from the</li>
    <li>painevent(recipient_flesh!=Mechanoid)->[painstate] pain</li>
    <li>painevent(recipient_flesh!=Mechanoid)->[painstate] agony</li>
    <li>painevent(recipient_flesh==Normal)->with misery</li>
    <li>painevent->from the injury</li>
    <li>painevent->from the wound</li>
    <li>to->to</li>
    <li>to->into</li>
  -->
  <Combat_MeleeIncludes.rulePack.rulesStrings>
    <li>r_logentry->[action], [result].</li>
    <li>r_logentry(p=0.2)->[action].</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=2)->[TOOL_label] de son/sa [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=1)->son/sa [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=1)->[TOOL_label] d'un/une [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==weapon,p=0.5)->un/une [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==bodypart,p=2)->son/sa [TOOL_label]</li>
    <li>implement(IMPLEMENTOWNER_type==bodypart,p=1)->son/sa [TOOL_label] [adjective_bodypart]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=2)->[TOOL_label] de son/sa [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=1)->son/sa [WEAPON_label]</li>
    <li>implement(IMPLEMENTOWNER_type==hediff,p=1)->son/sa [TOOL_label]</li>
    <li>adjective_bodypart->dur</li>
    <li>adjective_bodypart->fort</li>
    <li>adjective_bodypart->puissant</li>
    <li>adjective_bodypart->énergique</li>
    <li>adjective_bodypart->imposant</li>
    <li>adjective_bodypart->rude</li>
    <li>adjective_bodypart->robuste</li>
    <li>adjective_bodypart->résistant</li>
    <li>adjective_bodypart->solide</li>
    <li>adjective_bodypart->coriace</li>
    <li>adjective_bodypart(INITIATOR_flesh==True)->calleux</li>
    <li>adjective_bodypart->ferme</li>
    <li>targetlist(recipient_part_count==1)->son/sa [recipient_part0_label]</li>
    <li>targetlist(recipient_part_count==2)->ses [recipient_part0_label] et [recipient_part1_label]</li>
    <li>targetlist(recipient_part_count==3)->ses [recipient_part0_label], [recipient_part1_label], et [recipient_part2_label]</li>
    <li>targetlist->ses [recipient_part0_label], [recipient_part1_label], [recipient_part2_label], et [recipient_part3_label]</li>
    <li>damaged_present->blessant</li>
    <li>damaged_present->lésant</li>
    <li>destroyed(p=0.5)->a détruit</li>
    <li>destroyed(p=0.5)->a démoli</li>
    <li>destroyed(p=0.5)->a ruiné</li>
    <li>destroyed(p=0.5)->a annihilé</li>
    <li>wince(RECIPIENT_flesh==Normal)->tressaillir</li>
    <li>wince(RECIPIENT_flesh==Normal)->grimacer</li>
    <li>wince(RECIPIENT_flesh==Normal)->se recroqueviller</li>
    <li>wince(RECIPIENT_flesh==Normal)->grogner</li>
    <li>wince(RECIPIENT_flesh!=Mechanoid)->hurler</li>
    <li>wince(RECIPIENT_flesh!=Mechanoid)->crier</li>
    <li>wince->reculer</li>
    <li>wince->trébucher</li>
    <li>painstate->dans</li>
    <li>painstate->avec</li>
    <li>painstate->de</li>
    <li>painevent(RECIPIENT_flesh!=Mechanoid)->[painstate] la douleur</li>
    <li>painevent(RECIPIENT_flesh!=Mechanoid)->[painstate] l'agonie</li>
    <li>painevent(RECIPIENT_flesh==Normal)->avec souffrance</li>
    <li>painevent->de la blessure</li>
    <li>painevent->de la plaie</li>
    <li>to->à</li>
    <li>to->dans</li>
  </Combat_MeleeIncludes.rulePack.rulesStrings>
  
  <!-- EN:
    <li>skillDescMelee->[wielding] [INITIATOR_possessive] [WEAPON_label] [skillAdv]</li>
    <li>skillDescMelee->[using] [implement] [skillAdv]</li>
    <li>wielding(p=4)->wielding</li>
    <li>wielding(p=3)->using</li>
    <li>wielding(p=2)->handling</li>
    <li>wielding->brandishing</li>
    <li>wielding->manipulating</li>
    <li>using(p=4)->using</li>
    <li>using->driving</li>
    <li>using->thrusting</li>
    <li>using->utilizing</li>
    <li>using->moving</li>
    <li>skillAdv(INITIATOR_skill<=3)->incompetently</li>
    <li>skillAdv(INITIATOR_skill<=3)->ineptly</li>
    <li>skillAdv(INITIATOR_skill<=3)->wildly</li>
    <li>skillAdv(INITIATOR_skill<=3)->randomly</li>
    <li>skillAdv(INITIATOR_skill<=3)->flailingly</li>
    <li>skillAdv(INITIATOR_skill<=4)->awkwardly</li>
    <li>skillAdv(INITIATOR_skill<=4)->clumsily</li>
    <li>skillAdv(INITIATOR_skill<=5)->fearfully</li>
    <li>skillAdv(INITIATOR_skill<=5)->falteringly</li>
    <li>skillAdv(INITIATOR_skill<=5)->foolishly</li>
    <li>skillAdv(INITIATOR_skill<=6)->hesitantly</li>
    <li>skillAdv(INITIATOR_skill<=6)->reluctantly</li>
    <li>skillAdv(INITIATOR_skill<=6)->slowly</li>
    <li>skillAdv(INITIATOR_skill<=6)->tentatively</li>
    <li>skillAdv(INITIATOR_skill<=6)->inexpertly</li>
    <li>skillAdv(INITIATOR_skill<=6)->amateurishly</li>
    <li>skillAdv(INITIATOR_skill<=6)->timidly</li>
    <li>skillAdv(INITIATOR_skill<=8)->enthusiastically</li>
    <li>skillAdv(INITIATOR_skill>=6,INITIATOR_skill<=10)->proficiently</li>
    <li>skillAdv(INITIATOR_skill>=6,INITIATOR_skill<=10)->competently</li>
    <li>skillAdv(INITIATOR_skill>=8)->professionally</li>
    <li>skillAdv(INITIATOR_skill>=8)->deftly</li>
    <li>skillAdv(INITIATOR_skill>=8)->aptly</li>
    <li>skillAdv(INITIATOR_skill>=8)->cleverly</li>
    <li>skillAdv(INITIATOR_skill>=8)->dexterously</li>
    <li>skillAdv(INITIATOR_skill>=8)->skillfully</li>
    <li>skillAdv(INITIATOR_skill>=10)->adeptly</li>
    <li>skillAdv(INITIATOR_skill>=10)->slickly</li>
    <li>skillAdv(INITIATOR_skill>=12)->expertly</li>
    <li>skillAdv(INITIATOR_skill>=12)->precisely</li>
    <li>skillAdv(INITIATOR_skill>=14)->masterfully</li>
    <li>skillAdv(INITIATOR_skill>=16)->artistically</li>
    <li>skillAdv(INITIATOR_skill>=16)->gracefully</li>
    <li>skillAdv(initiator_flesh==Mechanoid)->mechanically</li>
    <li>skillAdv(initiator_flesh==Mechanoid)->robotically</li>
    <li>skillAdv(initiator_flesh==Mechanoid)->directly</li>
  -->
  <Combat_SkillIncludes.rulePack.rulesStrings>TODO</Combat_SkillIncludes.rulePack.rulesStrings>
  
  <!-- EN:
    <li>destroyed_targets(recipient_part_destroyed_count==1)->[recipient_part_destroyed0_label]</li>
    <li>destroyed_targets(recipient_part_destroyed_count==2)->[recipient_part_destroyed0_label] and [recipient_part_destroyed1_label]</li>
    <li>destroyed_targets(recipient_part_destroyed_count==3)->[recipient_part_destroyed0_label], [recipient_part_destroyed1_label], and [recipient_part_destroyed2_label]</li>
    <li>destroyed_targets->[recipient_part_destroyed0_label], [recipient_part_destroyed1_label], [recipient_part_destroyed2_label], and [recipient_part_destroyed3_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==1)->[recipient_part_damaged0_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==2)->[recipient_part_damaged0_label] and [recipient_part_damaged1_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==3)->[recipient_part_damaged0_label], [recipient_part_damaged1_label], and [recipient_part_damaged2_label]</li>
    <li>damaged_targets->[recipient_part_damaged0_label], [recipient_part_damaged1_label], [recipient_part_damaged2_label], and [recipient_part_damaged3_label]</li>
  -->
  <Combat_WoundIncludes.rulePack.rulesStrings>
    <li>destroyed_targets(recipient_part_destroyed_count==1)->son/sa [recipient_part_destroyed0_label]</li>
    <li>destroyed_targets(recipient_part_destroyed_count==2)->ses [recipient_part_destroyed0_label] et [recipient_part_destroyed1_label]</li>
    <li>destroyed_targets(recipient_part_destroyed_count==3)->ses [recipient_part_destroyed0_label], [recipient_part_destroyed1_label] et [recipient_part_destroyed2_label]</li>
    <li>destroyed_targets->ses [recipient_part_destroyed0_label], [recipient_part_destroyed1_label], [recipient_part_destroyed2_label] et [recipient_part_destroyed3_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==1)->son/sa [recipient_part_damaged0_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==2)->ses [recipient_part_damaged0_label] et [recipient_part_damaged1_label]</li>
    <li>damaged_targets(recipient_part_damaged_count==3)->ses [recipient_part_damaged0_label], [recipient_part_damaged1_label] et [recipient_part_damaged2_label]</li>
    <li>damaged_targets->ses [recipient_part_damaged0_label], [recipient_part_damaged1_label], [recipient_part_damaged2_label] et [recipient_part_damaged3_label]</li>
    <li>expertly->expertement</li>
    <li>expertly->ingénieusement</li>
    <li>expertly->adroitement</li>
    <li>expertly->habilement</li>
    <li>expertly->savamment</li>
    <li>expertly->astucieusement</li>
    <li>expertly->professionellement</li>
    <li>expertly->judicieusement</li>
    <li>expertly->dextrement</li>
    <li>expertly->intelligemment</li>
    <li>expertly->magistralement</li>
    <li>expertly->artistiquement</li>
    <li>expertly->avec compétence</li>
    <li>expertly->avec grande expérience</li>
    <li>expertly->avec brio</li>
    <li>expertly->avec soin</li>
    <li>expertly->avec precision</li>
    <li>expertly->avec aptitude</li>
    <li>expertly->avec force</li>
    <li>expertly->avec dexterité</li>
    <li>expertly->avec maîtrise</li>
    <li>expertly->avec art</li>
    <li>expertly->avec professionalisme</li>
    <li>expertly->comme un/une virtuose</li>
    <li>expertly->comme un/une expert(e)</li>
    <li>expertly->comme un/une maestro</li>
    <li>expertly->comme un/une artiste</li>
    <li>expertly->comme un/une pro</li>
    <li>expert->expert</li>
    <li>expert->adepte</li>
    <li>expert->adroit</li>
    <li>expert->habile</li>
    <li>expert->savant</li>
    <li>expert->rusé</li>
    <li>expert->professionel</li>
    <li>expert->compétent</li>
    <li>expert->expérimenté</li>
    <li>expert->futé</li>
    <li>expert->maître</li>
    <li>expert->artiste</li>
  </Combat_WoundIncludes.rulePack.rulesStrings>
  
</LanguageData>